/*
 * Density Dashboard styles
 *
 * This is the master stylesheet for the Density dashboard, and pulls in styles for a css reset, all
 * of the user interface components from Density UI, global style variables, charts styles and all
 * the component styles from all the components inside of src/components in this project.
 *
 * NB: When reading through the imports, you'll probably notice that some of them are pointing to
 * json files, not other sass files! What's up with that? Well, we're using this sass plugin called
 * node-sass-json-importer (https://github.com/DensityCo/node-sass-json-importer) that allows json
 * files to be imported and their keys used as sass variables. If might seem a bit strange, but
 * abstracting variables out into json like this means that variables can be accessed from both
 * javascript and from sass (webpack/node's `require` function can also accept the path to a json
 * file)
 *
 */

// normalize.css @ 7.0.0
@import "reset";

// Global variables like colors, spacings, etc...
@import "../node_modules/@density/ui/variables/colors.json";
@import "../node_modules/@density/ui/variables/spacing.json";
@import "../node_modules/@density/ui/variables/fonts.json";
@import "../node_modules/@density/ui/variables/timings.json";
@import "../node_modules/@density/ui/variables/grid.json";

/**
 * Calculate column size percentage
 */
@function get-col-percent($column-num) {
  @return $column-num / $fg-columns * 100%;
}

@mixin grid-container {
  margin-left: -1 * $fg-gutter;
  margin-right: -1 * $fg-gutter;
  box-sizing: border-box;

  max-width: 1000px;
  margin: 20px auto;
  padding-left: 10px;
  padding-right: 10px;
}

@mixin grid-row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.row {
  @include grid-row;
}

@mixin grid-column {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  flex-grow: 0;
  flex-shrink: 0;
  min-height: 1px;
  padding-left: $fg-gutter;
  padding-right: $fg-gutter;
}

@mixin grid-width($xs, $sm, $md, $lg) {
  @include grid-column;

  flex-basis: get-col-percent($xs);
  max-width: get-col-percent($xs);

  @media (min-width: $screen-sm-min) {
    flex-basis: get-col-percent($sm);
    max-width: get-col-percent($sm);
  }
  @media (min-width: $screen-md-min) {
    flex-basis: get-col-percent($md);
    max-width: get-col-percent($md);
  }
  @media (min-width: $screen-lg-min) {
    flex-basis: get-col-percent($lg);
    max-width: get-col-percent($lg);
  }
}

// Components:

// Navbar
@import "../node_modules/@density/ui-navbar/variables.json";

// Card
// @import "../node_modules/@density/ui-card/variables.json";
// @import "../node_modules/@density/ui-card/dist/sass";
@mixin make-card($background: #fff, $foreground: $gray-darker, $padding-horizontal: 20px, $padding-vertical: 20px) {
  box-sizing: border-box;
  background-color: $background;
  border-radius: $border-radius-base;
  border: none;
  color: $foreground;
  border: 1px solid $gray-light;
  position: relative;
}

@mixin make-card-header(
  $color: $gray-darkest,
  $padding-horizontal: 20px,
  $padding-vertical: 30px,
  $font-size: $font-size-3,
  $font-weight: $font-weight-3
) {
  font-family: $font-base;
  color: $color;
  font-size: $font-size;
  font-weight: $font-weight;

  padding: $padding-vertical $padding-horizontal;
  transform: translate(0px, 2px); /* font baseline hack for sailec */

  display: flex;
  flex-direction: row;
  align-items: center;
  height: $font-size;
}

@mixin make-card-title {
  // Add ellipsis if title is too wide for its container
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin make-card-body(
  $font-size: $font-size-base,
  $font-weight: $font-weight-base,
  $padding-vertical: 20px,
  $padding-horizontal: 20px
) {
  font-family: $font-base;
  font-size: $font-size;

  padding-top: $padding-vertical;
  padding-left: $padding-horizontal;
  padding-right: $padding-horizontal;
  padding-bottom: 20px;
}

@mixin make-card-well(
  $font-size: $font-size-3,
  $font-weight: $font-weight-3,
  $color: $gray-cinder,
  $background: $gray-lightest
) {
  font-family: $font-base;
  font-size: $font-size;
  font-weight: $font-weight;
  text-align: center;
  line-height: 28px;
  color: $color;

  background-color: $background;
  padding-top: 80px;
  padding-bottom: 80px;
  padding-left: 20px;
  padding-right: 20px;

  &:first-child, .card-loading-wrapper:first-child + & {
    border-top-left-radius: $border-radius-base;
    border-top-right-radius: $border-radius-base;
  }
  &:last-child {
    border-bottom-left-radius: $border-radius-base;
    border-bottom-right-radius: $border-radius-base;
  }
}

@mixin make-card-well-highlight($color: $brand-primary, $font-weight: $font-weight-3) {
  color: $color;
  white-space: nowrap; /* don't wrap in the middle of a highlighted item */
  font-weight: $font-weight;
}


@keyframes card-loading-indeterminate-animation {
  0% {
    margin-left: 0;
    width: 0;
    animation-timing-function: ease-in;
  }
  50% {
    margin-left: 0;
    width: 100%;
  }
  100% {
    margin-left: 100%;
    width: 0;
    animation-timing-function: ease-out;
  }
}
@mixin make-card-loading-wrapper($height: 2px) {
  height: $height;
  width: 100%;
  overflow-x: hidden;
  position: absolute;
  left: 0;
  right: 0;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}

@mixin make-card-loading($color: $brand-primary, $percent: 100%, $height: 2px, $indeterminate: false) {
  width: $percent;
  height: $height;
  background-color: $color;
  margin-bottom: -1 * $height;

  @if $indeterminate {
    // Since the state is indeterminate, the bar has a fixed width.
    width: 100%;
    animation-name: card-loading-indeterminate-animation;
    animation-duration: 1s;
    animation-iteration-count: infinite;
  } @else {
    // As the bar grows, get longer.
    transition: all 250ms linear;
  }
}

@mixin make-card-table(
  $background: #fff,
  $foreground: $gray-cinder,
  $padding-vertical: 20px,
) {
  background-color: $background;
  color: $foreground;
  font-family: $font-base;
  font-size: 14px;

  // When the user scrolls to the edge of the card table, show a shadow to indicate that they can
  // scroll either to the left, right, or in both directions.
  &-scroll-left { box-shadow: inset 30px 0 20px -30px rgba(0, 0, 0, 0.25); }
  &-scroll-right { box-shadow: inset -30px 0 20px -30px rgba(0, 0, 0, 0.25); }
  &-scroll-both {
    box-shadow: inset 30px 0 20px -30px rgba(0, 0, 0, 0.25),
                inset -30px 0 20px -30px rgba(0, 0, 0, 0.25);
  }


  table {
    border-collapse: collapse;
    width: 100%;
  }

  table > thead > tr > th {
    white-space: nowrap;
    padding-left: 20px;
    padding-right: 20px;
    padding-top: 5px;
    line-height: 38px;
    border-top: 1px solid $gray-lighter;
    border-bottom: 1px solid $gray-lighter;
    text-align: left;
  }
  table > tbody > tr > td {
    padding-left: 20px;
    padding-right: 20px;

    padding-top: 5px;
    line-height: 38px;

    border-bottom: 1px solid $gray-lighter;
    text-align: left;

    white-space: nowrap;
  }
  table > tbody > tr:last-of-type > td {
    border-bottom: 1px solid transparent;
  }
}
@mixin make-card-table-scroll {
  overflow-x: auto;
}

// A normal card.
:global(.card) {
  @include make-card;
  :global(.card-header) { @include make-card-header($font-size: $font-size-3, $font-weight: $font-weight-3); }
  :global(.card-title) { @include make-card-title; }
  :global(.card-body) { @include make-card-body; }
}

// A modal card.
:global(.card-modal) {
  @include make-card($padding-vertical: 40px, $padding-horizontal: 20px);

  :global(.card-header) {
    @include make-card-header(
      $font-size: $font-size-2,
      $font-weight: $font-weight-2,
      $padding-vertical: 40px
    );
  }
  :global(.card-body) {
    @include make-card-body(
      $padding-vertical: 40px
    );
  }
}

:global(.card-well) { @include make-card-well; }
:global(.card-well-highlight) { @include make-card-well-highlight; }

:global(.card-well-dark) {
  @include make-card-well(
    $color: $gray-dark,
    $font-weight: 400,
    $background: $gray-cinder
  );
}
:global(.card-well-dark .card-well-highlight) {
  @include make-card-well-highlight($color: #fff, $font-weight: 500);
}


:global(.card-loading-wrapper) { @include make-card-loading-wrapper; }
:global(.card-loading) { @include make-card-loading; }
:global(.card-loading-indeterminate) { @include make-card-loading($indeterminate: true); }
:global(.card-dark) {
  @include make-card($gray-cinder, #fff);
}

:global(.card-table) { @include make-card-table(#fff, $gray-cinder); }
:global(.card-table-scroll) { @include make-card-table-scroll; }

// Modal
@import "../node_modules/@density/ui-modal/variables.json";
@import "../node_modules/@density/ui-modal/dist/sass";

// Popover
@import "../node_modules/@density/ui-popover/variables.json";
@import "../node_modules/@density/ui-popover/dist/sass";

$font-size-x-small: 10px;


* {
  font-family: 'Sailec', 'Helvetica', 'Arial', sans-serif;
}

// TODO: Should these be ported into Density UI?
input[type="text"],
input[type="textarea"],
input[type="password"],
input[type="email"],
input[type="tel"],
input[type="select"] {
  -webkit-appearance: none;
  box-shadow: none;
}

html {
  margin: 0px;
  background-color: #F0F0F2;
}

a {
  color: $brand-primary;
}

p {
  font-size: $font-size-base;
  font-weight: $font-weight-base;
  line-height: $line-height-base;
  margin-top: 0px;
  margin-bottom: 0px;
}
pre {
  line-height: $line-height-base;
}

// globally override chrome's terrible autofill background color
input:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 100px white inset !important;
}

// Change autofill color in chrome to be white.
// TODO: still necessary after adding the box-shadow rule above?
input[type=input], input[type=password] { &:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 30px white inset;
} }

// Densicons is an icon font with Density icons inside.
$cdn-path: "https://densityco.github.io/assets";
@font-face {
  font-family: 'Densicons';
  src: url("#{$cdn-path}/fonts/densicons.4e3b11a3.ttf") format("truetype"),
    url("#{$cdn-path}/fonts/densicons.fdc1ac2e.eot") format("opentype"),
    url("#{$cdn-path}/fonts/densicons.222eea6d.woff") format("woff"),
    url("#{$cdn-path}/fonts/densicons.00b7e5bb.svg") format("svg");
  font-weight: normal;
  font-style: normal;
}

//
// Charts
//
@import "../node_modules/@density/chart-historical-counts/dist/sass";
@import "../node_modules/@density/chart-real-time-count/dist/sass";
@import "../node_modules/@density/chart-daily-metrics/dist/sass";

// 
// Component styles are included below for each component in the src/components folder.
// 

@import "./components/app/styles";
@import "./components/app-bar/styles";
@import "./components/app-bar-transparent/styles";
@import "./components/app-frame/styles";
@import "./components/app-navbar/styles";
@import "./components/app-pane/styles";
@import "./components/app-scroll-view/styles";
@import "./components/app-sidebar/styles";
@import "./components/space-count/styles";
@import "./components/dev-token-list/styles";
@import "./components/unknown-page/styles";
@import "./components/dev-token-card/styles";
@import "./components/login/styles";
@import "./components/live-space-list/styles";
@import "./components/modal-header-action-button/styles";
@import "./components/account/styles";
@import "./components/dev-token-create-modal/styles";
@import "./components/dev-webhook-list/styles";
@import "./components/dev-webhook-card/styles";
@import "./components/dev-webhook-create/styles";
@import "./components/account-registration/styles";
@import "./components/dev-token-update-modal/styles";
@import "./components/live-space-card/styles";
@import "./components/dev-token-update-modal/styles";
@import "./components/dev-webhook-update-modal/styles";
@import "./components/subnav/styles";
@import "./components/account-forgot-password/styles";
@import "./components/icons/styles";
@import "./components/form-label/styles";
@import "./components/loading-spinner/styles";
@import "./components/error-bar/styles";
@import "./components/environment-switcher/styles";
@import "./components/explore-space-detail-foot-traffic-card/styles";
@import "./components/explore-space-detail-daily-metrics-card/styles";
@import "./components/explore-space-detail-raw-events-card/styles";
@import "./components/explore-edit-count-modal/styles";
@import "./components/explore-space-detail-raw-events-pager/styles";
@import "./components/account-setup-overview/styles";
@import "./components/account-setup-header/styles";
@import "./components/account-setup-doorway-list/styles";
@import "./components/account-setup-doorway-detail/styles";
@import "./components/account-setup-doorway-detail-image-upload/styles";
@import "./components/image-retry/styles";
@import "./components/nav-logged-in/styles";
@import "./components/nav-logged-out/styles";
@import "./components/input-stack/styles";
@import "./components/live-space-detail/styles";
@import "./components/explore-space-list/styles";
@import "./components/explore-space-detail-utilization-card/styles";
@import "./components/sortable-grid-header/styles";
@import "./components/explore-set-capacity-modal/styles";
@import "./components/space-hierarchy-select-box/styles";
@import "./components/explore-space-trends/styles";
@import "./components/explore-filter-bar/styles";
@import "./components/explore-space-header/styles";
@import "./components/explore-space-daily/styles";
@import "./components/explore-space-data-export/styles";
@import "./components/explore-space-detail-raw-events-export-card/styles";
@import "./components/dashboard/styles";
@import "./components/report/styles";
@import "./components/dashboards-list/styles";
@import "./components/explore-new-list/styles";
@import "./components/explore-new-detail/styles";
